<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2020-05-05T13:57:03" hostname="DESKTOP-M4T51JE" time="0.227">
  <properties/>
  <testcase name="TestUpdateUser" classname="com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest" time="0.08"/>
  <testcase name="TestDelete" classname="com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest" time="0.042"/>
  <testcase name="TestInsert" classname="com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest" time="0.03"/>
  <testcase name="TestInsertUser" classname="com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest" time="0.019"/>
  <testcase name="getOneUser" classname="com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest" time="0.021"/>
  <testcase name="TestDeleteUser" classname="com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest" time="0.026"/>
  <system-out><![CDATA[2020-05-05 15:57:03.415  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@63e8642a, testMethod = TestUpdateUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@cf719e]; rollback [true]
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into user (firstname, lastname, id) values (?, ?, ?)
Hibernate: insert into product (name, price, id) values (?, ?, ?)
Hibernate: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.id=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into product (name, price, id) values (?, ?, ?)
Hibernate: select product0_.id as id1_0_, product0_.name as name2_0_, product0_.price as price3_0_ from product product0_ where product0_.id=?
Hibernate: select user0_.id as id1_1_, user0_.firstname as firstnam2_1_, user0_.lastname as lastname3_1_ from user user0_ where user0_.id=?
Hibernate: insert into user_products (user_id, products_id) values (?, ?)
Hibernate: insert into user_products (user_id, products_id) values (?, ?)
Hibernate: select user0_.id as id1_1_, user0_.firstname as firstnam2_1_, user0_.lastname as lastname3_1_ from user user0_ where user0_.id=?
2020-05-05 15:57:03.492  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@63e8642a, testMethod = TestUpdateUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-05-05 15:57:03.500  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@116bb70f, testMethod = TestDelete@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@cf719e]; rollback [true]
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into user (firstname, lastname, id) values (?, ?, ?)
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: delete from user where id=?
Hibernate: select count(*) as col_0_0_ from user user0_
2020-05-05 15:57:03.536  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@116bb70f, testMethod = TestDelete@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-05-05 15:57:03.541  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@680e413c, testMethod = TestInsert@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@cf719e]; rollback [true]
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into user (firstname, lastname, id) values (?, ?, ?)
Hibernate: select count(*) as col_0_0_ from user user0_
2020-05-05 15:57:03.568  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@680e413c, testMethod = TestInsert@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-05-05 15:57:03.573  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@11f988c, testMethod = TestInsertUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@cf719e]; rollback [true]
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
2020-05-05 15:57:03.588  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@11f988c, testMethod = TestInsertUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-05-05 15:57:03.591  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@4cd8d269, testMethod = getOneUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@cf719e]; rollback [true]
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into user (firstname, lastname, id) values (?, ?, ?)
Hibernate: select user0_.id as id1_1_, user0_.firstname as firstnam2_1_, user0_.lastname as lastname3_1_ from user user0_ where user0_.id=?
2020-05-05 15:57:03.611  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@4cd8d269, testMethod = getOneUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2020-05-05 15:57:03.616  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@7271d41a, testMethod = TestDeleteUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@cf719e]; rollback [true]
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into user (firstname, lastname, id) values (?, ?, ?)
Hibernate: delete from user where id=?
Hibernate: select user0_.id as id1_1_, user0_.firstname as firstnam2_1_, user0_.lastname as lastname3_1_ from user user0_ where user0_.id=?
2020-05-05 15:57:03.639  INFO 18576 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@35c9eccc testClass = UserServiceTest, testInstance = com.tactfactory.monprojetsb.monprojetsb.services.UserServiceTest@7271d41a, testMethod = TestDeleteUser@UserServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@37dc2ce9 testClass = UserServiceTest, locations = '{}', classes = '{class com.tactfactory.monprojetsb.monprojetsb.MonprojetsbApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@76caae6f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@2dd4c187, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3201bac6, [ImportsContextCustomizer@74fd318 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[com.tactfactory.monprojetsb.monprojetsb], basePackageClasses=[], value=[]), @org.apiguardian.api.API(consumers=[*], since=5.0, status=STABLE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=NONE, connection=NONE), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], transactionManager=, isolation=DEFAULT, readOnly=false, noRollbackForClassName=[], noRollbackFor=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, useDefaultFilters=true, excludeFilters=[], includeFilters=[], properties=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[com.tactfactory.monprojetsb.monprojetsb], includeFilters=[], value=[]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.junit.jupiter.api.extension.ExtendWith(value=[class org.springframework.test.context.junit.jupiter.SpringExtension]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@11a961ff, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@67870133, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
